/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type {IAppResolverContext} from 'lib-api-common/src/interfaces';
import type {core, connectionPluginCore} from 'nexus';
import type {FieldAuthorizeResolver} from 'nexus/dist/plugins/fieldAuthorizePlugin';

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void;
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  InputClub: {
    // input type
    Avatar?: NexusGenInputs['InputMedia'] | null; // InputMedia
    CoverPhoto?: NexusGenInputs['InputMedia'] | null; // InputMedia
    isFeatured?: boolean | null; // Boolean
    leagueID: string; // String!
    name: string; // String!
    sportIDs: string[]; // [String!]!
  };
  InputCreateCMSUser: {
    // input type
    accessLevel: string; // String!
    birthDate?: string | null; // String
    contactNumber?: string | null; // String
    country?: string | null; // String
    displayName: string; // String!
    email: string; // String!
    firstName: string; // String!
    jobTitle?: string | null; // String
    lastName: string; // String!
    password: string; // String!
    profilePhotoID?: string | null; // String
  };
  InputEditCMSUserProfile: {
    // input type
    birthDate?: string | null; // String
    contactNumber?: string | null; // String
    country?: string | null; // String
    displayName: string; // String!
    firstName: string; // String!
    jobTitle?: string | null; // String
    lastName: string; // String!
    profilePhotoID?: string | null; // String
  };
  InputFanGroup: {
    // input type
    Avatar?: NexusGenInputs['InputMedia'] | null; // InputMedia
    CoverPhoto?: NexusGenInputs['InputMedia'] | null; // InputMedia
    name: string; // String!
    sportIDs: string[]; // [String!]!
  };
  InputGamePartner: {
    // input type
    Icon?: NexusGenInputs['InputMedia'] | null; // InputMedia
    isHidden?: boolean | null; // Boolean
    name: string; // String!
  };
  InputInHouse: {
    // input type
    Avatar?: NexusGenInputs['InputMedia'] | null; // InputMedia
    CoverPhoto?: NexusGenInputs['InputMedia'] | null; // InputMedia
    name: string; // String!
    sportIDs: string[]; // [String!]!
  };
  InputLeague: {
    // input type
    Avatar?: NexusGenInputs['InputMedia'] | null; // InputMedia
    CoverPhoto?: NexusGenInputs['InputMedia'] | null; // InputMedia
    name: string; // String!
    sportIDs: string[]; // [String!]!
  };
  InputLivestream: {
    // input type
    link: string; // String!
    source: string; // String!
    startDate?: string | null; // String
    timezone?: string | null; // String
    title: string; // String!
  };
  InputMedia: {
    // input type
    objectID: string; // String!
    objectType: string; // String!
  };
  InputSport: {
    // input type
    Avatar: NexusGenInputs['InputMedia']; // InputMedia!
    CoverPhoto: NexusGenInputs['InputMedia']; // InputMedia!
    Icon?: NexusGenInputs['InputMedia'] | null; // InputMedia
    isHidden?: boolean | null; // Boolean
    name: string; // String!
    status?: string | null; // String
  };
}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenObjects {
  CMSUser: {
    // root type
    accessLevel: string; // String!
    birthDate?: string | null; // String
    contactNumber?: string | null; // String
    country?: string | null; // String
    createdAt?: number | null; // Float
    displayName: string; // String!
    email: string; // String!
    firstName: string; // String!
    id?: string | null; // ID
    invitedBy: string; // String!
    jobTitle?: string | null; // String
    lastName: string; // String!
    name?: string | null; // String
    profilePhotoID?: string | null; // String
    slug: string; // String!
    uid: string; // String!
    updatedAt?: number | null; // Float
  };
  CMSUsers: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['CMSUser'][] | null; // [CMSUser!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  Channel: {
    // root type
    channelGroupID: string; // String!
    createdAt?: number | null; // Float
    description?: string | null; // String
    id?: string | null; // ID
    livestreamID?: string | null; // String
    lockerRoomID: string; // String!
    name: string; // String!
    slug: string; // String!
    type: string; // String!
    updatedAt?: number | null; // Float
  };
  ChannelGroup: {
    // root type
    createdAt?: number | null; // Float
    description?: string | null; // String
    group: string; // String!
    id?: string | null; // ID
    lockerRoomID: string; // String!
    name: string; // String!
    slug: string; // String!
    updatedAt?: number | null; // Float
    withLivestream?: boolean | null; // Boolean
  };
  ChannelGroups: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['ChannelGroup'][] | null; // [ChannelGroup!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  Channels: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['Channel'][] | null; // [Channel!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  Club: {
    // root type
    Avatar?: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto?: NexusGenRootTypes['Media'] | null; // Media
    createdAt?: number | null; // Float
    id?: string | null; // ID
    isFeatured?: boolean | null; // Boolean
    leagueID?: string | null; // String
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt?: number | null; // Float
  };
  Clubs: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['Club'][] | null; // [Club!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  FanGroup: {
    // root type
    Avatar?: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto?: NexusGenRootTypes['Media'] | null; // Media
    createdAt?: number | null; // Float
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt?: number | null; // Float
  };
  FanGroups: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['FanGroup'][] | null; // [FanGroup!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  GamePartner: {
    // root type
    Icon?: NexusGenRootTypes['Media'] | null; // Media
    id?: string | null; // ID
    isHidden?: boolean | null; // Boolean
    name: string; // String!
    slug: string; // String!
  };
  GamePartners: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['GamePartner'][] | null; // [GamePartner!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  InHouse: {
    // root type
    Avatar?: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto?: NexusGenRootTypes['Media'] | null; // Media
    createdAt?: number | null; // Float
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt?: number | null; // Float
  };
  InHouses: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['InHouse'][] | null; // [InHouse!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  League: {
    // root type
    Avatar?: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto?: NexusGenRootTypes['Media'] | null; // Media
    createdAt?: number | null; // Float
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt?: number | null; // Float
  };
  Leagues: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['League'][] | null; // [League!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  Livestream: {
    // root type
    createdAt?: number | null; // Float
    id?: string | null; // ID
    isLive?: boolean | null; // Boolean
    link: string; // String!
    source: string; // String!
    startDate?: string | null; // String
    timezone?: string | null; // String
    title: string; // String!
    updatedAt?: number | null; // Float
  };
  LivestreamSource: {
    // root type
    id?: string | null; // ID
    name: string; // String!
  };
  LockerRoom: {
    // root type
    createdAt?: number | null; // Float
    group: string; // String!
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    updatedAt?: number | null; // Float
  };
  LockerRooms: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['LockerRoom'][] | null; // [LockerRoom!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  Media: {
    // root type
    isSport?: boolean | null; // Boolean
    objectID: string; // String!
    objectType: string; // String!
  };
  Mutation: {};
  MutationResult: {
    // root type
    objectID?: string | null; // String
    objectType?: string | null; // String
    success: boolean; // Boolean!
    timestamp?: number | null; // Float
  };
  Query: {};
  Sport: {
    // root type
    Avatar: NexusGenRootTypes['Media']; // Media!
    CoverPhoto: NexusGenRootTypes['Media']; // Media!
    Icon?: NexusGenRootTypes['Media'] | null; // Media
    createdAt?: number | null; // Float
    id?: string | null; // ID
    name: string; // String!
    slug: string; // String!
    status: string; // String!
    updatedAt?: number | null; // Float
  };
  Sports: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['Sport'][] | null; // [Sport!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  User: {
    // root type
    Avatar?: NexusGenRootTypes['Media'] | null; // Media
    createdAt?: number | null; // Float
    emailAddress: string; // String!
    firstName?: string | null; // String
    id?: string | null; // ID
    lastName?: string | null; // String
    slug: string; // String!
    uid: string; // String!
    updatedAt?: number | null; // Float
    username: string; // String!
    zipCode?: string | null; // String
  };
  UserRole: {
    // root type
    createdAt?: number | null; // Float
    group: string; // String!
    groupID: string; // String!
    groupType: string; // String!
    id?: string | null; // ID
    isPrimaryOwner?: boolean | null; // Boolean
    lockerRoomID: string; // String!
    role: string; // String!
    status: string; // String!
    uid: string; // String!
    updatedAt?: number | null; // Float
    userID: string; // String!
  };
  UserRolesInLockerRoom: {
    // root type
    Managers: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
    Owners: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
    Supporters: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
  };
  Users: {
    // root type
    count?: number | null; // Int
    items?: NexusGenRootTypes['User'][] | null; // [User!]
    next?: string | null; // String
    total?: number | null; // Int
  };
  ZipCode: {
    // root type
    city: string; // String!
    country: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    state: string; // String!
    zip: string; // String!
  };
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects;

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars;

export interface NexusGenFieldTypes {
  CMSUser: {
    // field return type
    accessLevel: string; // String!
    birthDate: string | null; // String
    contactNumber: string | null; // String
    country: string | null; // String
    createdAt: number | null; // Float
    displayName: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: string | null; // ID
    invitedBy: string; // String!
    jobTitle: string | null; // String
    lastName: string; // String!
    name: string | null; // String
    profilePhotoID: string | null; // String
    slug: string; // String!
    uid: string; // String!
    updatedAt: number | null; // Float
  };
  CMSUsers: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['CMSUser'][] | null; // [CMSUser!]
    next: string | null; // String
    total: number | null; // Int
  };
  Channel: {
    // field return type
    Livestream: NexusGenRootTypes['Livestream'] | null; // Livestream
    channelGroupID: string; // String!
    createdAt: number | null; // Float
    description: string | null; // String
    id: string | null; // ID
    livestreamID: string | null; // String
    lockerRoomID: string; // String!
    name: string; // String!
    slug: string; // String!
    type: string; // String!
    updatedAt: number | null; // Float
  };
  ChannelGroup: {
    // field return type
    Channels: Array<NexusGenRootTypes['Channel'] | null> | null; // [Channel]
    createdAt: number | null; // Float
    description: string | null; // String
    group: string; // String!
    id: string | null; // ID
    lockerRoomID: string; // String!
    name: string; // String!
    slug: string; // String!
    updatedAt: number | null; // Float
    withLivestream: boolean | null; // Boolean
  };
  ChannelGroups: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['ChannelGroup'][] | null; // [ChannelGroup!]
    next: string | null; // String
    total: number | null; // Int
  };
  Channels: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['Channel'][] | null; // [Channel!]
    next: string | null; // String
    total: number | null; // Int
  };
  Club: {
    // field return type
    Avatar: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto: NexusGenRootTypes['Media'] | null; // Media
    League: NexusGenRootTypes['League'] | null; // League
    LockerRoom: NexusGenRootTypes['LockerRoom'] | null; // LockerRoom
    Sports: NexusGenRootTypes['Sport'][] | null; // [Sport!]
    createdAt: number | null; // Float
    id: string | null; // ID
    isFeatured: boolean | null; // Boolean
    leagueID: string | null; // String
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt: number | null; // Float
  };
  Clubs: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['Club'][] | null; // [Club!]
    next: string | null; // String
    total: number | null; // Int
  };
  FanGroup: {
    // field return type
    Avatar: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto: NexusGenRootTypes['Media'] | null; // Media
    LockerRoom: NexusGenRootTypes['LockerRoom'] | null; // LockerRoom
    Sports: NexusGenRootTypes['Sport'][] | null; // [Sport!]
    createdAt: number | null; // Float
    id: string | null; // ID
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt: number | null; // Float
  };
  FanGroups: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['FanGroup'][] | null; // [FanGroup!]
    next: string | null; // String
    total: number | null; // Int
  };
  GamePartner: {
    // field return type
    Icon: NexusGenRootTypes['Media'] | null; // Media
    id: string | null; // ID
    isHidden: boolean | null; // Boolean
    name: string; // String!
    slug: string; // String!
  };
  GamePartners: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['GamePartner'][] | null; // [GamePartner!]
    next: string | null; // String
    total: number | null; // Int
  };
  InHouse: {
    // field return type
    Avatar: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto: NexusGenRootTypes['Media'] | null; // Media
    LockerRoom: NexusGenRootTypes['LockerRoom'] | null; // LockerRoom
    Sports: NexusGenRootTypes['Sport'][] | null; // [Sport!]
    createdAt: number | null; // Float
    id: string | null; // ID
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt: number | null; // Float
  };
  InHouses: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['InHouse'][] | null; // [InHouse!]
    next: string | null; // String
    total: number | null; // Int
  };
  League: {
    // field return type
    Avatar: NexusGenRootTypes['Media'] | null; // Media
    CoverPhoto: NexusGenRootTypes['Media'] | null; // Media
    LockerRoom: NexusGenRootTypes['LockerRoom'] | null; // LockerRoom
    Sports: NexusGenRootTypes['Sport'][] | null; // [Sport!]
    createdAt: number | null; // Float
    id: string | null; // ID
    name: string; // String!
    slug: string; // String!
    sportIDs: string[]; // [String!]!
    updatedAt: number | null; // Float
  };
  Leagues: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['League'][] | null; // [League!]
    next: string | null; // String
    total: number | null; // Int
  };
  Livestream: {
    // field return type
    LivestreamSource: NexusGenRootTypes['LivestreamSource'] | null; // LivestreamSource
    createdAt: number | null; // Float
    id: string | null; // ID
    isLive: boolean | null; // Boolean
    link: string; // String!
    source: string; // String!
    startDate: string | null; // String
    timezone: string | null; // String
    title: string; // String!
    updatedAt: number | null; // Float
  };
  LivestreamSource: {
    // field return type
    id: string | null; // ID
    name: string; // String!
  };
  LockerRoom: {
    // field return type
    Roles: NexusGenRootTypes['UserRolesInLockerRoom'] | null; // UserRolesInLockerRoom
    createdAt: number | null; // Float
    group: string; // String!
    id: string | null; // ID
    name: string; // String!
    slug: string; // String!
    updatedAt: number | null; // Float
  };
  LockerRooms: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['LockerRoom'][] | null; // [LockerRoom!]
    next: string | null; // String
    total: number | null; // Int
  };
  Media: {
    // field return type
    PhotoURL: string | null; // String
    isSport: boolean | null; // Boolean
    objectID: string; // String!
    objectType: string; // String!
  };
  Mutation: {
    // field return type
    addLivestream: NexusGenRootTypes['MutationResult']; // MutationResult!
    addLivestreamSource: NexusGenRootTypes['MutationResult']; // MutationResult!
    addUserManagerialRole: NexusGenRootTypes['MutationResult']; // MutationResult!
    createCMSUser: NexusGenRootTypes['MutationResult']; // MutationResult!
    createClub: NexusGenRootTypes['MutationResult']; // MutationResult!
    createFanGroup: NexusGenRootTypes['MutationResult']; // MutationResult!
    createGamePartner: NexusGenRootTypes['MutationResult']; // MutationResult!
    createInHouse: NexusGenRootTypes['MutationResult']; // MutationResult!
    createLeague: NexusGenRootTypes['MutationResult']; // MutationResult!
    createSport: NexusGenRootTypes['MutationResult']; // MutationResult!
    createUserRoleType: NexusGenRootTypes['MutationResult']; // MutationResult!
    deleteClub: NexusGenRootTypes['MutationResult']; // MutationResult!
    deleteFanGroup: NexusGenRootTypes['MutationResult']; // MutationResult!
    deleteInHouse: NexusGenRootTypes['MutationResult']; // MutationResult!
    deleteLeague: NexusGenRootTypes['MutationResult']; // MutationResult!
    deleteSport: NexusGenRootTypes['MutationResult']; // MutationResult!
    editCMSUserAccessLevel: NexusGenRootTypes['MutationResult']; // MutationResult!
    editCMSUserProfile: NexusGenRootTypes['MutationResult']; // MutationResult!
    editClub: NexusGenRootTypes['MutationResult']; // MutationResult!
    editFanGroup: NexusGenRootTypes['MutationResult']; // MutationResult!
    editInHouse: NexusGenRootTypes['MutationResult']; // MutationResult!
    editLeague: NexusGenRootTypes['MutationResult']; // MutationResult!
    editSport: NexusGenRootTypes['MutationResult']; // MutationResult!
    resendInviteCMSUser: NexusGenRootTypes['MutationResult']; // MutationResult!
    setFeaturedGame: NexusGenRootTypes['MutationResult']; // MutationResult!
    setLivestreamLive: NexusGenRootTypes['MutationResult']; // MutationResult!
  };
  MutationResult: {
    // field return type
    objectID: string | null; // String
    objectType: string | null; // String
    success: boolean; // Boolean!
    timestamp: number | null; // Float
  };
  Query: {
    // field return type
    getCMSUser: NexusGenRootTypes['CMSUser'] | null; // CMSUser
    getCMSUsers: NexusGenRootTypes['CMSUsers']; // CMSUsers!
    getClub: NexusGenRootTypes['Club'] | null; // Club
    getClubs: NexusGenRootTypes['Clubs']; // Clubs!
    getFanGroup: NexusGenRootTypes['FanGroup'] | null; // FanGroup
    getFanGroups: NexusGenRootTypes['FanGroups']; // FanGroups!
    getGamePartners: NexusGenRootTypes['GamePartners']; // GamePartners!
    getInHouse: NexusGenRootTypes['InHouse'] | null; // InHouse
    getInHouses: NexusGenRootTypes['InHouses']; // InHouses!
    getLeague: NexusGenRootTypes['League'] | null; // League
    getLeagues: NexusGenRootTypes['Leagues']; // Leagues!
    getLockerRoom: NexusGenRootTypes['LockerRoom'] | null; // LockerRoom
    getLockerRooms: NexusGenRootTypes['LockerRooms']; // LockerRooms!
    getSport: NexusGenRootTypes['Sport'] | null; // Sport
    getSports: NexusGenRootTypes['Sports']; // Sports!
    getUser: NexusGenRootTypes['User'] | null; // User
    getUsers: NexusGenRootTypes['Users']; // Users!
  };
  Sport: {
    // field return type
    Avatar: NexusGenRootTypes['Media']; // Media!
    CoverPhoto: NexusGenRootTypes['Media']; // Media!
    Icon: NexusGenRootTypes['Media'] | null; // Media
    createdAt: number | null; // Float
    id: string | null; // ID
    name: string; // String!
    slug: string; // String!
    status: string; // String!
    updatedAt: number | null; // Float
  };
  Sports: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['Sport'][] | null; // [Sport!]
    next: string | null; // String
    total: number | null; // Int
  };
  User: {
    // field return type
    Avatar: NexusGenRootTypes['Media'] | null; // Media
    ZipCode: NexusGenRootTypes['ZipCode'] | null; // ZipCode
    createdAt: number | null; // Float
    emailAddress: string; // String!
    firstName: string | null; // String
    id: string | null; // ID
    lastName: string | null; // String
    slug: string; // String!
    uid: string; // String!
    updatedAt: number | null; // Float
    username: string; // String!
    zipCode: string | null; // String
  };
  UserRole: {
    // field return type
    User: NexusGenRootTypes['User']; // User!
    createdAt: number | null; // Float
    group: string; // String!
    groupID: string; // String!
    groupType: string; // String!
    id: string | null; // ID
    isPrimaryOwner: boolean | null; // Boolean
    lockerRoomID: string; // String!
    role: string; // String!
    status: string; // String!
    uid: string; // String!
    updatedAt: number | null; // Float
    userID: string; // String!
  };
  UserRolesInLockerRoom: {
    // field return type
    Managers: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
    Owners: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
    Supporters: NexusGenRootTypes['UserRole'][]; // [UserRole!]!
  };
  Users: {
    // field return type
    count: number | null; // Int
    items: NexusGenRootTypes['User'][] | null; // [User!]
    next: string | null; // String
    total: number | null; // Int
  };
  ZipCode: {
    // field return type
    city: string; // String!
    country: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    state: string; // String!
    zip: string; // String!
  };
}

export interface NexusGenFieldTypeNames {
  CMSUser: {
    // field return type name
    accessLevel: 'String';
    birthDate: 'String';
    contactNumber: 'String';
    country: 'String';
    createdAt: 'Float';
    displayName: 'String';
    email: 'String';
    firstName: 'String';
    id: 'ID';
    invitedBy: 'String';
    jobTitle: 'String';
    lastName: 'String';
    name: 'String';
    profilePhotoID: 'String';
    slug: 'String';
    uid: 'String';
    updatedAt: 'Float';
  };
  CMSUsers: {
    // field return type name
    count: 'Int';
    items: 'CMSUser';
    next: 'String';
    total: 'Int';
  };
  Channel: {
    // field return type name
    Livestream: 'Livestream';
    channelGroupID: 'String';
    createdAt: 'Float';
    description: 'String';
    id: 'ID';
    livestreamID: 'String';
    lockerRoomID: 'String';
    name: 'String';
    slug: 'String';
    type: 'String';
    updatedAt: 'Float';
  };
  ChannelGroup: {
    // field return type name
    Channels: 'Channel';
    createdAt: 'Float';
    description: 'String';
    group: 'String';
    id: 'ID';
    lockerRoomID: 'String';
    name: 'String';
    slug: 'String';
    updatedAt: 'Float';
    withLivestream: 'Boolean';
  };
  ChannelGroups: {
    // field return type name
    count: 'Int';
    items: 'ChannelGroup';
    next: 'String';
    total: 'Int';
  };
  Channels: {
    // field return type name
    count: 'Int';
    items: 'Channel';
    next: 'String';
    total: 'Int';
  };
  Club: {
    // field return type name
    Avatar: 'Media';
    CoverPhoto: 'Media';
    League: 'League';
    LockerRoom: 'LockerRoom';
    Sports: 'Sport';
    createdAt: 'Float';
    id: 'ID';
    isFeatured: 'Boolean';
    leagueID: 'String';
    name: 'String';
    slug: 'String';
    sportIDs: 'String';
    updatedAt: 'Float';
  };
  Clubs: {
    // field return type name
    count: 'Int';
    items: 'Club';
    next: 'String';
    total: 'Int';
  };
  FanGroup: {
    // field return type name
    Avatar: 'Media';
    CoverPhoto: 'Media';
    LockerRoom: 'LockerRoom';
    Sports: 'Sport';
    createdAt: 'Float';
    id: 'ID';
    name: 'String';
    slug: 'String';
    sportIDs: 'String';
    updatedAt: 'Float';
  };
  FanGroups: {
    // field return type name
    count: 'Int';
    items: 'FanGroup';
    next: 'String';
    total: 'Int';
  };
  GamePartner: {
    // field return type name
    Icon: 'Media';
    id: 'ID';
    isHidden: 'Boolean';
    name: 'String';
    slug: 'String';
  };
  GamePartners: {
    // field return type name
    count: 'Int';
    items: 'GamePartner';
    next: 'String';
    total: 'Int';
  };
  InHouse: {
    // field return type name
    Avatar: 'Media';
    CoverPhoto: 'Media';
    LockerRoom: 'LockerRoom';
    Sports: 'Sport';
    createdAt: 'Float';
    id: 'ID';
    name: 'String';
    slug: 'String';
    sportIDs: 'String';
    updatedAt: 'Float';
  };
  InHouses: {
    // field return type name
    count: 'Int';
    items: 'InHouse';
    next: 'String';
    total: 'Int';
  };
  League: {
    // field return type name
    Avatar: 'Media';
    CoverPhoto: 'Media';
    LockerRoom: 'LockerRoom';
    Sports: 'Sport';
    createdAt: 'Float';
    id: 'ID';
    name: 'String';
    slug: 'String';
    sportIDs: 'String';
    updatedAt: 'Float';
  };
  Leagues: {
    // field return type name
    count: 'Int';
    items: 'League';
    next: 'String';
    total: 'Int';
  };
  Livestream: {
    // field return type name
    LivestreamSource: 'LivestreamSource';
    createdAt: 'Float';
    id: 'ID';
    isLive: 'Boolean';
    link: 'String';
    source: 'String';
    startDate: 'String';
    timezone: 'String';
    title: 'String';
    updatedAt: 'Float';
  };
  LivestreamSource: {
    // field return type name
    id: 'ID';
    name: 'String';
  };
  LockerRoom: {
    // field return type name
    Roles: 'UserRolesInLockerRoom';
    createdAt: 'Float';
    group: 'String';
    id: 'ID';
    name: 'String';
    slug: 'String';
    updatedAt: 'Float';
  };
  LockerRooms: {
    // field return type name
    count: 'Int';
    items: 'LockerRoom';
    next: 'String';
    total: 'Int';
  };
  Media: {
    // field return type name
    PhotoURL: 'String';
    isSport: 'Boolean';
    objectID: 'String';
    objectType: 'String';
  };
  Mutation: {
    // field return type name
    addLivestream: 'MutationResult';
    addLivestreamSource: 'MutationResult';
    addUserManagerialRole: 'MutationResult';
    createCMSUser: 'MutationResult';
    createClub: 'MutationResult';
    createFanGroup: 'MutationResult';
    createGamePartner: 'MutationResult';
    createInHouse: 'MutationResult';
    createLeague: 'MutationResult';
    createSport: 'MutationResult';
    createUserRoleType: 'MutationResult';
    deleteClub: 'MutationResult';
    deleteFanGroup: 'MutationResult';
    deleteInHouse: 'MutationResult';
    deleteLeague: 'MutationResult';
    deleteSport: 'MutationResult';
    editCMSUserAccessLevel: 'MutationResult';
    editCMSUserProfile: 'MutationResult';
    editClub: 'MutationResult';
    editFanGroup: 'MutationResult';
    editInHouse: 'MutationResult';
    editLeague: 'MutationResult';
    editSport: 'MutationResult';
    resendInviteCMSUser: 'MutationResult';
    setFeaturedGame: 'MutationResult';
    setLivestreamLive: 'MutationResult';
  };
  MutationResult: {
    // field return type name
    objectID: 'String';
    objectType: 'String';
    success: 'Boolean';
    timestamp: 'Float';
  };
  Query: {
    // field return type name
    getCMSUser: 'CMSUser';
    getCMSUsers: 'CMSUsers';
    getClub: 'Club';
    getClubs: 'Clubs';
    getFanGroup: 'FanGroup';
    getFanGroups: 'FanGroups';
    getGamePartners: 'GamePartners';
    getInHouse: 'InHouse';
    getInHouses: 'InHouses';
    getLeague: 'League';
    getLeagues: 'Leagues';
    getLockerRoom: 'LockerRoom';
    getLockerRooms: 'LockerRooms';
    getSport: 'Sport';
    getSports: 'Sports';
    getUser: 'User';
    getUsers: 'Users';
  };
  Sport: {
    // field return type name
    Avatar: 'Media';
    CoverPhoto: 'Media';
    Icon: 'Media';
    createdAt: 'Float';
    id: 'ID';
    name: 'String';
    slug: 'String';
    status: 'String';
    updatedAt: 'Float';
  };
  Sports: {
    // field return type name
    count: 'Int';
    items: 'Sport';
    next: 'String';
    total: 'Int';
  };
  User: {
    // field return type name
    Avatar: 'Media';
    ZipCode: 'ZipCode';
    createdAt: 'Float';
    emailAddress: 'String';
    firstName: 'String';
    id: 'ID';
    lastName: 'String';
    slug: 'String';
    uid: 'String';
    updatedAt: 'Float';
    username: 'String';
    zipCode: 'String';
  };
  UserRole: {
    // field return type name
    User: 'User';
    createdAt: 'Float';
    group: 'String';
    groupID: 'String';
    groupType: 'String';
    id: 'ID';
    isPrimaryOwner: 'Boolean';
    lockerRoomID: 'String';
    role: 'String';
    status: 'String';
    uid: 'String';
    updatedAt: 'Float';
    userID: 'String';
  };
  UserRolesInLockerRoom: {
    // field return type name
    Managers: 'UserRole';
    Owners: 'UserRole';
    Supporters: 'UserRole';
  };
  Users: {
    // field return type name
    count: 'Int';
    items: 'User';
    next: 'String';
    total: 'Int';
  };
  ZipCode: {
    // field return type name
    city: 'String';
    country: 'String';
    latitude: 'Float';
    longitude: 'Float';
    state: 'String';
    zip: 'String';
  };
}

export interface NexusGenArgTypes {
  Mutation: {
    addLivestream: {
      // args
      channelName: string; // String!
      input: NexusGenInputs['InputLivestream']; // InputLivestream!
      lockerRoomID: string; // String!
    };
    addLivestreamSource: {
      // args
      name: string; // String!
    };
    addUserManagerialRole: {
      // args
      emailAddress?: string | null; // String
      lockerRoomID: string; // String!
      role: string; // String!
      userID?: string | null; // String
    };
    createCMSUser: {
      // args
      input: NexusGenInputs['InputCreateCMSUser']; // InputCreateCMSUser!
    };
    createClub: {
      // args
      input: NexusGenInputs['InputClub']; // InputClub!
    };
    createFanGroup: {
      // args
      input: NexusGenInputs['InputFanGroup']; // InputFanGroup!
    };
    createGamePartner: {
      // args
      input: NexusGenInputs['InputGamePartner']; // InputGamePartner!
    };
    createInHouse: {
      // args
      input: NexusGenInputs['InputInHouse']; // InputInHouse!
    };
    createLeague: {
      // args
      input: NexusGenInputs['InputLeague']; // InputLeague!
    };
    createSport: {
      // args
      input: NexusGenInputs['InputSport']; // InputSport!
    };
    createUserRoleType: {
      // args
      name: string; // String!
    };
    deleteClub: {
      // args
      id: string; // String!
    };
    deleteFanGroup: {
      // args
      id: string; // String!
    };
    deleteInHouse: {
      // args
      id: string; // String!
    };
    deleteLeague: {
      // args
      id: string; // String!
    };
    deleteSport: {
      // args
      id: string; // String!
    };
    editCMSUserAccessLevel: {
      // args
      accessLevel: string; // String!
      id: string; // String!
    };
    editCMSUserProfile: {
      // args
      id: string; // String!
      input: NexusGenInputs['InputEditCMSUserProfile']; // InputEditCMSUserProfile!
    };
    editClub: {
      // args
      id: string; // String!
      input: NexusGenInputs['InputClub']; // InputClub!
    };
    editFanGroup: {
      // args
      id: string; // String!
      input: NexusGenInputs['InputFanGroup']; // InputFanGroup!
    };
    editInHouse: {
      // args
      id: string; // String!
      input: NexusGenInputs['InputInHouse']; // InputInHouse!
    };
    editLeague: {
      // args
      id: string; // String!
      input: NexusGenInputs['InputLeague']; // InputLeague!
    };
    editSport: {
      // args
      id: string; // String!
      input: NexusGenInputs['InputSport']; // InputSport!
    };
    resendInviteCMSUser: {
      // args
      email: string; // String!
    };
    setFeaturedGame: {
      // args
      objectID: string; // String!
    };
    setLivestreamLive: {
      // args
      id: string; // String!
    };
  };
  Query: {
    getCMSUser: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getClub: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getFanGroup: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getInHouse: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getLeague: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getLockerRoom: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getSport: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
    getUser: {
      // args
      id?: string | null; // String
      slug?: string | null; // String
    };
  };
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false;
    resolveType: true;
    __typename: false;
  };
};

export interface NexusGenTypes {
  context: IAppResolverContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes:
    | NexusGenTypes['inputNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes:
    | NexusGenTypes['allInputTypes']
    | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>;
  }
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
